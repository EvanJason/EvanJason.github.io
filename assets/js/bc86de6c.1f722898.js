"use strict";(self.webpackChunklwl_docusaurus_website=self.webpackChunklwl_docusaurus_website||[]).push([[9705],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>j});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),d=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=d(e.components);return t.createElement(i.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(r),f=o,j=p["".concat(i,".").concat(f)]||p[f]||u[f]||s;return r?t.createElement(j,a(a({ref:n},l),{},{components:r})):t.createElement(j,a({ref:n},l))}));function j(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=f;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var d=2;d<s;d++)a[d]=r[d];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8971:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=r(7462),o=(r(7294),r(3905));const s={title:"nodejs\u53cd\u5411\u4ee3\u7406",categories:["nodejs"],tags:["nodejs"],date:"2023-10-16",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"nodejs\u53cd\u5411\u4ee3\u7406"},a="nodejs\u53cd\u5411\u4ee3\u7406",c={unversionedId:"Nodejs/nodejs\u53cd\u5411\u4ee3\u7406",id:"Nodejs/nodejs\u53cd\u5411\u4ee3\u7406",title:"nodejs\u53cd\u5411\u4ee3\u7406",description:"",source:"@site/docs/Nodejs/nodejs\u53cd\u5411\u4ee3\u7406.md",sourceDirName:"Nodejs",slug:"/Nodejs/nodejs\u53cd\u5411\u4ee3\u7406",permalink:"/docs/Nodejs/nodejs\u53cd\u5411\u4ee3\u7406",draft:!1,editUrl:"https://github.com/EvanJason/EvanJason.github.io/tree/main/docs/Nodejs/nodejs\u53cd\u5411\u4ee3\u7406.md",tags:[{label:"nodejs",permalink:"/docs/tags/nodejs"}],version:"current",frontMatter:{title:"nodejs\u53cd\u5411\u4ee3\u7406",categories:["nodejs"],tags:["nodejs"],date:"2023-10-16",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"nodejs\u53cd\u5411\u4ee3\u7406"},sidebar:"tutorialSidebar",previous:{title:"\u591a\u5217\u8868\u7684jq\u5c55\u5f00\u6536\u8d77\u6548\u679c",permalink:"/docs/Jquery/\u591a\u5217\u8868\u7684jq\u5c55\u5f00\u6536\u8d77\u6548\u679c"},next:{title:"node\u6253\u5305\u5b66\u4e60",permalink:"/docs/Nodejs/node\u6253\u5305\u5b66\u4e60"}},i={},d=[],l={toc:d},p="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(p,(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nodejs\u53cd\u5411\u4ee3\u7406"},"nodejs\u53cd\u5411\u4ee3\u7406"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const express = require("express");\nconst fs = require("fs");\nconst os = require("os");\nconst app = express();\nconst chalk = require("chalk");\nconst { createProxyMiddleware } = require("http-proxy-middleware");\n\nlet port = 8080;\nconst folderPath = __dirname + "/build";\n\nif (fs.existsSync(folderPath)) {\n    app.use(express.static(folderPath));\n} else {\n    console.error(chalk.red(`\u6587\u4ef6\u5939 ${folderPath} \u4e0d\u5b58\u5728,\u8bf7\u6253\u5305\u540e\u91cd\u8bd5`));\n    return\n}\napp.use(\n    createProxyMiddleware("/es", {\n        target: "http://server.cn",\n        changeOrigin: true,\n        pathRewrite: {\n            "^/es": "",\n        },\n    })\n);\napp.use(\n    createProxyMiddleware("/es-websocket", {\n        target: "ws://server.cn/ws/api",\n        ws: true,\n        changeOrigin: true,\n        pathRewrite: {\n            "^/es-websocket": "",\n        },\n    })\n);\nfunction getHost() {\n    const networkInterfaces = os.networkInterfaces();\n    const interfaces = Object.keys(networkInterfaces);\n    for (const iface of interfaces) {\n        const addresses = networkInterfaces[iface];\n        for (const addr of addresses) {\n            if (addr.family === "IPv4" && !addr.internal) {\n                return addr.address;\n            }\n        }\n    }\n    return null;\n}\nfunction run() {\n    try {\n        const server = app.listen(port, () => {\n            const host = getHost();\n            const port = server.address().port;\n            if (host) {\n                console.log(\n                    `\u542f\u52a8\u670d\u52a1\u6210\u529f\\n\u8bf7\u8bbf\u95ee:   ${chalk.blueBright(\n                        `http://${host}:${port}`\n                    )} `\n                );\n            }\n        });\n        // \u76d1\u542c\u7aef\u53e3\u51b2\u7a81\u6216\u9519\u8bef\n        server.on(\'error\', (error) => {\n            if (error.syscall !== \'listen\') {\n                throw error;\n            }\n            if (error.code === \'EADDRINUSE\') {\n                port++;\n                server.listen(port);\n            } else {\n                throw error;\n            }\n        });\n    } catch (error) {\n        console.log("\u542f\u52a8\u670d\u52a1\u5931\u8d25");\n    }\n}\nrun();\n\n')))}u.isMDXComponent=!0}}]);