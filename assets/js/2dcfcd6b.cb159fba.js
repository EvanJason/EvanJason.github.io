"use strict";(self.webpackChunklwl_docusaurus_website=self.webpackChunklwl_docusaurus_website||[]).push([[2202],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),h=a,m=c["".concat(d,".").concat(h)]||c[h]||y[h]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},308:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={title:"Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",categories:["Vue"],tags:["Vue","vue-grid-layout"],date:"2024-06-15",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528"},o=void 0,s={unversionedId:"Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",id:"Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",title:"Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",description:"\u4f8b\u5b50",source:"@site/docs/Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528.md",sourceDirName:"Vue",slug:"/Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",permalink:"/docs/Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",draft:!1,editUrl:"https://github.com/evanjason/evanjason.github.io/tree/main/docs/Vue/Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528.md",tags:[{label:"Vue",permalink:"/docs/tags/vue"},{label:"vue-grid-layout",permalink:"/docs/tags/vue-grid-layout"}],version:"current",frontMatter:{title:"Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528",categories:["Vue"],tags:["Vue","vue-grid-layout"],date:"2024-06-15",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"Vue2 vue-grid-layout\u7684\u5b9e\u8df5\u5e94\u7528"},sidebar:"tutorialSidebar",previous:{title:"Vue2 el-table \u8868\u5934\u6709\u56fa\u5b9a\u5217\u65f6\uff0c\u5de6\u53f3\u6eda\u52a8\u6761\u65e0\u6cd5\u62d6\u52a8\u7684\u95ee\u9898",permalink:"/docs/Vue/Vue2 el-table \u8868\u5934\u6709\u56fa\u5b9a\u5217\u65f6\uff0c\u5de6\u53f3\u6eda\u52a8\u6761\u65e0\u6cd5\u62d6\u52a8\u7684\u95ee\u9898"},next:{title:"Vue\u5b9e\u73b0\u5206\u9875\u529f\u80fd",permalink:"/docs/Vue/Vue\u5b9e\u73b0\u5206\u9875\u529f\u80fd"}},d={},l=[{value:"\u4f8b\u5b50",id:"\u4f8b\u5b50",level:2},{value:"vue-grid-layout\u63d2\u4ef6\u6587\u6863",id:"vue-grid-layout\u63d2\u4ef6\u6587\u6863",level:2}],u={toc:l},c="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u4f8b\u5b50"},"\u4f8b\u5b50"),(0,a.kt)("p",null,"layout.vue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  ...\n  <grid-layout\n    :layout.sync="layout"\n    :col-num="4"\n    :margin="[0, 10]"\n    :is-draggable="powerType === 2"\n    :is-resizable="false"\n    :vertical-compact="true"\n    :use-css-transforms="true"\n    @layout-updated="layoutUpdated"\n  >\n    <grid-item\n      v-for="(item, index) in layout"\n      :key="item.id"\n      :x="item.x"\n      :y="item.y"\n      :w="item.w"\n      :h="item.h"\n      :i="item.i"\n      :drag-allow-from="dragAllowFrom"\n      :drag-ignore-from="dragIgnoreFrom"\n      ref="gridItem"\n      :id="item.id"\n    >\n      \x3c!-- \u6bcf\u4e00\u5757\u5e03\u5c40\u5185\u5bb9 --\x3e\n      <DashboardCardRander\n        v-if="!parentLoading"\n        :loading="item[\'loading\']"\n        :info="item"\n        :init="item[\'init\']"\n        :setttingType="setttingType"\n        @getData="(e) => getData(index, e)"\n        @changeOnResize="(e) => changeOnResize(index, e)"\n        @removeReport="() => removeReport(index)"\n        @changeLoading="(e) => changeLoading(index, e)"\n      />\n    </grid-item>\n  </grid-layout>\n</template>\n<script>\nimport { GridLayout, GridItem } from \'vue-grid-layout\'\nimport DashboardCardRander from \'../DashboardCardRander\'\nexport default {\n  name: \'DashboardLayout\',\n  components: {\n    GridLayout,\n    GridItem,\n    DashboardCardRander,\n  },\n  data() {\n    return {\n      layout: [],\n      dragAllowFrom: \'.layout-card-header\',\n      dragIgnoreFrom: \'.layout-card-header-content, .layout-card-header-extra, .layout-card-content\',\n    }\n  },\n  methods: {\n    // blockSortUpdateItemVo \u670d\u52a1\u7aef\u7f13\u5b58\u7684\u5e03\u5c40\u6570\u636e\n    generateLayout(list) {\n      let arr = []\n      const sortList = _.cloneDeep(list)\n      // \u6309\u7167 y \u5750\u6807\u7136\u540e\u662f x \u5750\u6807\u8fdb\u884c\u6392\u5e8f\n      sortList.sort((a, b) => {\n        const configA =\n          a.blockSortUpdateItemVo && Object.keys(a.blockSortUpdateItemVo).length > 0\n            ? {\n                i: a.blockSortUpdateItemVo.sortKey,\n                x: a.blockSortUpdateItemVo.x,\n                y: a.blockSortUpdateItemVo.y,\n                w: a.blockSortUpdateItemVo.width,\n                h: a.blockSortUpdateItemVo.height,\n              }\n            : null\n        const configB =\n          b.blockSortUpdateItemVo && Object.keys(b.blockSortUpdateItemVo).length > 0\n            ? {\n                i: b.blockSortUpdateItemVo.sortKey,\n                x: b.blockSortUpdateItemVo.x,\n                y: b.blockSortUpdateItemVo.y,\n                w: b.blockSortUpdateItemVo.width,\n                h: b.blockSortUpdateItemVo.height,\n              }\n            : null\n        // \u68c0\u67e5\u662f\u5426\u6709\u7a7a\u5bf9\u8c61\uff0c\u7a7a\u5bf9\u8c61\u653e\u7f6e\u5728\u6700\u540e\n        if (!configA) {\n          return 1\n        }\n        if (!configB) {\n          return -1\n        }\n        // \u6bd4\u8f83 y \u503c\n        if (configA.y !== configB.y) {\n          return configA.y - configB.y\n        }\n        // \u5982\u679c y \u76f8\u540c\uff0c\u5219\u6bd4\u8f83 x \u503c\n        return configA.x - configB.x\n      })\n      sortList.forEach((item, index) => {\n        const { blockSortUpdateItemVo } = item\n        const config =\n          blockSortUpdateItemVo && Object.keys(blockSortUpdateItemVo).length > 0\n            ? {\n                i: blockSortUpdateItemVo.sortKey,\n                x: blockSortUpdateItemVo.x,\n                y: blockSortUpdateItemVo.y,\n                w: blockSortUpdateItemVo.width,\n                h: blockSortUpdateItemVo.height,\n              }\n            : {}\n        arr.push({\n          ...item,\n          i: `${item.id}-${item.dataAnalysisType}`,\n          x: (index % 2) * 2,\n          y: Math.floor(index / 2) * 3,\n          w: item.data?.saveConfigParams?.viewSizeType === 2 ? 4 : 2,\n          h: 3,\n          ...config,\n        })\n      })\n      return arr\n    },\n    /** \u5904\u7406\u5e03\u5c40\u9519\u4e71 */\n    handleLayoutDisorder(list) {\n      let arr1 = list.map((it) => {\n        let arrangedItem = { ...it }\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u5bbd\u5ea6\u4e3a4\uff0c\u76f4\u63a5\u653e\u7f6e\u5e76\u8df3\u8fc7\u5230\u4e0b\u4e00\u884c\n        if (arrangedItem.w === 4) {\n          arrangedItem.x = 0 // \u91cd\u7f6ex\u4e3a0\n        } else {\n          // \u5982\u679c\u5f53\u524d\u5143\u7d20\u5bbd\u5ea6\u4e3a2\uff0c\u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u653e\u7f6e\n          if (arrangedItem.x + arrangedItem.w > 6) {\n            // \u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u79fb\u52a8\u5230\u65b0\u884c\n            arrangedItem.x = 0\n            arrangedItem.y += 3 // \u589e\u52a01\u884c\u7684\u9ad8\u5ea6\n          }\n        }\n        return arrangedItem\n      })\n      return arr1\n    },\n    async handleSearchData(item, list) {\n      try {\n        const params = {\n          dashboardConfigId: this.dashboardConfigId,\n          id: item.id,\n          opType: this.setttingType,\n          refreshQueryFlag: this.refreshQueryFlag || 0,\n        }\n        const results = await this.getBlockDetails(params)\n        const curFindIndex = this.layout.findIndex((it) => it.id === item.id)\n        if (curFindIndex != -1) {\n          const newLayout = {\n            ...this.layout[curFindIndex],\n            w: results?.data?.saveConfigParams?.viewSizeType === 2 ? 4 : list[curFindIndex]?.w || 2,\n            ...results,\n          }\n          this.$set(this.layout, curFindIndex, { ...newLayout, loading: false, init: false })\n        }\n      } catch (error) {\n        this.layout = this.layout.map((it) => {\n          return {\n            ...it,\n            loading: false,\n            message: \'\u8bf7\u6c42\u5f02\u5e38\',\n            code: undefined,\n            data: undefined,\n          }\n        })\n        console.error(error)\n      }\n    },\n    async getBlockDetails(params) {\n      // \u8bf7\u6c42\u63a5\u53e3\n      return await getDashboardReportBlockDetails(params)\n    },\n    async getData(index, record) {\n      this.$set(this.layout[index], \'loading\', true)\n      const list = this.layout.map((it) => {\n        return {\n          blockConfigId: it.id,\n          height: it.h,\n          sortKey: it.i,\n          width: it.w,\n          x: it.x,\n          y: it.y,\n        }\n      })\n      // \u5e03\u5c40\u7f13\u5b58\u63a5\u53e3 this.blockSortUpdate(list)\n      const params = {\n        dashboardConfigId: this.dashboardConfigId,\n        id: this.layout[index].id,\n        opType: this.setttingType,\n        showType: record.showType,\n        refreshQueryFlag: record.refreshQueryFlag || 0,\n        eventOpenLevelTrConfigList: record?.eventOpenLevelTrConfigList || undefined,\n        analysisParams: record?.analysisParams || undefined,\n      }\n      try {\n        const result = await this.getBlockDetails(params)\n        clearTimeout(this.timer)\n        this.timer = setTimeout(() => {\n          this.$nextTick(() => {\n            this.$set(this.layout[index], \'loading\', false)\n            this.$set(this.layout[index], \'code\', result.code)\n            this.$set(this.layout[index], \'data\', result.data)\n            this.$set(this.layout[index], \'message\', result.message)\n          })\n        }, 200)\n      } catch (error) {\n        this.$set(this.layout[index], \'loading\', false)\n        this.$set(this.layout[index], \'code\', undefined)\n        this.$set(this.layout[index], \'data\', undefined)\n        this.$set(this.layout[index], \'message\', \'\u8bf7\u6c42\u5f02\u5e38\')\n      }\n    },\n    /** \u6539\u53d8\u5361\u7247\u5c3a\u5bf8\u5927\u5c0f */\n    changeOnResize(index, value) {\n      const newItemObj = {\n        // \'small\': { w: 1, h: 1 },\n        middle: { w: 2, h: 3 },\n        large: { w: 4, h: 3 },\n      }\n      this.$set(this.layout, index, { ...this.layout[index], ...newItemObj[value] })\n\n      this.layout = this.handleLayoutDisorder(this.layout)\n    },\n    async removeReport(index) {\n      const reportId = this.layout[index].id\n      const result = await delDashboardReportBlock({ id: reportId })\n      if (result?.code !== 1) {\n        return\n      }\n      this.layout.splice(index, 1)\n      this.layout = this.handleLayoutDisorder(this.layout)\n    },\n    layoutUpdated(newLayout) {\n        // \u6bd4\u8f83\u5f53\u524d\u548c\u7f13\u5b58\u7684\uff0c\u5f53\u6709\u53d8\u5316\u65f6\u624d\u6267\u884c\u5e03\u5c40\u7f13\u5b58\u65b9\u6cd5\n        // \u5e03\u5c40\u7f13\u5b58\u63a5\u53e3 this.blockSortUpdate(list)\n      }\n    },\n    changeLoading(index, val) {\n      this.$set(this.layout[index], \'loading\', val)\n    },\n  },\n  watch: {\n    blockItemVoList: {\n      handler(val, oldVal) {\n        this.abReportFlag = false\n        if (val?.length > 0) {\n          this.layout = this.generateLayout(val)\n          this.layout = this.handleLayoutDisorder(this.layout)\n          // \u76d1\u542c\u89c6\u56fe\u5143\u7d20\u662f\u5426\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u89c6\u91ce\u5185\uff0c\u5728\u7a97\u53e3\u5185\u624d\u8fdb\u884c\u8bf7\u6c42\n          this.$nextTick(() => {\n            const observer = new IntersectionObserver(\n              (entries) => {\n                entries.forEach((entry, arr) => {\n                  if (entry.isIntersecting) {\n                    // \u9700\u8981\u5728grid-item\u4e0a\u8bbe\u7f6eid\u624d\u80fd\u89e6\u53d1\n                    const curFindIndex = this.layout.findIndex((it) => it.id === +entry.target.id)\n                    if (curFindIndex != -1) {\n                      this.handleSearchData(this.layout[curFindIndex], this.layout)\n                      this.$set(this.layout, curFindIndex, { ...this.layout[curFindIndex], loading: true, init: true })\n                    }\n                    observer.unobserve(entry.target)\n                  }\n                })\n              },\n              { threshold: 0.3 }\n            )\n            const gridItems = this.$refs.gridItem.map((item) => item.$el)\n            if (gridItems) {\n              gridItems.forEach((item) => observer.observe(item))\n            }\n          })\n        } else {\n          this.layout = []\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer)\n  },\n}\n<\/script>\n')),(0,a.kt)("h2",{id:"vue-grid-layout\u63d2\u4ef6\u6587\u6863"},"vue-grid-layout\u63d2\u4ef6\u6587\u6863"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://jbaysolutions.github.io/vue-grid-layout/zh/guide/"},"https://jbaysolutions.github.io/vue-grid-layout/zh/guide/")))}y.isMDXComponent=!0}}]);