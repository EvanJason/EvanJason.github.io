"use strict";(self.webpackChunklwl_docusaurus_website=self.webpackChunklwl_docusaurus_website||[]).push([[5587],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},635:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={title:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",categories:["React","antd","Typescript","Form"],tags:["React","antd","Typescript","Form"],date:"2023-07-22",authors:"lin",excerpt:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355"},l=void 0,i={unversionedId:"React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",id:"React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",title:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",description:"",source:"@site/docs/React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355.md",sourceDirName:"React",slug:"/React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",permalink:"/docs/React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",draft:!1,editUrl:"https://github.com/EvanJason/EvanJason.github.io/tree/main/docs/React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355.md",tags:[{label:"React",permalink:"/docs/tags/react"},{label:"antd",permalink:"/docs/tags/antd"},{label:"Typescript",permalink:"/docs/tags/typescript"},{label:"Form",permalink:"/docs/tags/form"}],version:"current",frontMatter:{title:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",categories:["React","antd","Typescript","Form"],tags:["React","antd","Typescript","Form"],date:"2023-07-22",authors:"lin",excerpt:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355"},sidebar:"tutorialSidebar",previous:{title:"\u5173\u952e\u8bcd\u9ad8\u4eae\u51fd\u6570",permalink:"/docs/React/\u5173\u952e\u8bcd\u9ad8\u4eae\u51fd\u6570"},next:{title:"\u7b5b\u9009\u7ec4\u4ef6",permalink:"/docs/React/\u7b5b\u9009\u7ec4\u4ef6"}},c={},s=[],u={toc:s},m="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Button, Checkbox, Col, DatePicker, Form, FormInstance, Input, Radio, Row, Select, Space, Spin } from 'antd'\nimport { Rule } from 'antd/es/form'\nimport React, { createRef } from 'react'\nconst FormItem = Form.Item\n\n\nexport interface formItemAttr {\n    label?: string\n    field: string\n    width?: number\n    options?: Array<{ label: React.ReactNode, value: React.Key }>\n    initialValue?: any\n    rules?: Rule[]\n    placeholder?: string\n    type: 'DATE' | 'INPUT' | 'SELECT' | 'CHECKBOX' | 'RADIO' | 'TEXTAREA' | 'CUSTOM'\n    render?: (formRef: React.RefObject<FormInstance<any>>, item: any) => React.ReactNode\n}\nexport interface IProps_BaseForm {\n    formList: Array<formItemAttr>;\n    onCancel: () => void\n    onOk: (formValue) => void\n    loading?: boolean\n    formItemLayout?: {\n        labelCol: { span: number },\n        wrapperCol: { span: number }\n    }\n    onValuesChange?: (changedValues, allValues) => void\n    footer?: React.ReactNode\n    footerStyle?: React.CSSProperties\n}\nconst BaseForm = (props: IProps_BaseForm) => {\n\n    const defaultLayout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 }\n    }\n    const { loading = false, formList, formItemLayout = defaultLayout, onOk, onCancel, footer, footerStyle } = props\n    const formRef = createRef<FormInstance>();\n    const handleOk = () => {\n        formRef.current?.validateFields().then((values) => {\n            onOk(values)\n        }).catch((errorInfo) => {\n            console.log(errorInfo)\n        })\n    }\n    const handleFormValue = (changedValues, allValues) => {\n        props.onValuesChange?.(changedValues, allValues)\n    }\n    const renderFormList = () => {\n        return formList.map((item, index) => {\n            let label = item.label;\n            let field = item.field;\n            let initialValue = item.initialValue || null;\n            let placeholder = item.placeholder;\n            let width = item.width || 300;\n            let rules = item.rules || [];\n            switch (item.type) {\n                case 'DATE':\n                    return <FormItem label={label} name={field} initialValue={initialValue} key={field} rules={rules}>\n                        <DatePicker allowClear placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>\n                case 'INPUT':\n                    return <FormItem label={label} name={field} initialValue={initialValue} key={field} rules={rules}>\n                        <Input type=\"text\" placeholder={placeholder} style={{ width }} />\n                    </FormItem>\n                case 'SELECT':\n                    return <FormItem label={label} name={[field]} initialValue={initialValue} key={field} rules={rules}>\n                        <Select\n                            style={{ width }}\n                            placeholder={placeholder}\n                            options={item.options || []}\n                        />\n                    </FormItem>\n                case 'CHECKBOX':\n                    return <FormItem label={label} name={[field]} valuePropName=\"checked\" initialValue={initialValue} key={field} rules={rules}>\n                        <Space>\n                            <Checkbox.Group options={item.options || []} style={{ width }} />\n                        </Space>\n                    </FormItem>\n                case 'RADIO':\n                    return <FormItem label={label} name={[field]} initialValue={initialValue} key={field} rules={rules}>\n                        <Radio.Group options={item.options || []} style={{ width }} />\n                    </FormItem>\n                case 'TEXTAREA':\n                    return <FormItem label={label} name={[field]} initialValue={initialValue} key={field} rules={rules}>\n                        <Input.TextArea rows={4} placeholder={placeholder} style={{ width }} />\n                    </FormItem>\n                case 'CUSTOM':\n                    formRef.current?.setFieldsValue({ [field]: initialValue })\n                    return item.render(formRef, item)\n            }\n        })\n    }\n    if (formList.length === 0) return\n    return (\n        <Spin spinning={loading}>\n            <Form\n                layout=\"horizontal\"\n                ref={formRef}\n                scrollToFirstError\n                {...formItemLayout}\n                onValuesChange={handleFormValue}\n            >\n                {renderFormList()}\n            </Form>\n            {\n                footer ? footer : <Row justify=\"center\" style={{ marginTop: 50, width: '50%', ...footerStyle }}>\n                    <Col>\n                        <Button\n                            type=\"primary\"\n                            style={{ marginRight: 100, width: 120 }}\n                            shape=\"round\"\n                            onClick={handleOk}\n                        >\n                            \u786e\u8ba4\n                        </Button>\n                    </Col>\n                    <Col>\n                        <Button\n                            style={{ width: 120 }}\n                            shape=\"round\"\n                            onClick={onCancel}\n                        >\n                            \u53d6\u6d88\n                        </Button>\n                    </Col>\n                </Row>\n            }\n        </Spin>\n    )\n}\nexport default BaseForm\n")))}p.isMDXComponent=!0}}]);