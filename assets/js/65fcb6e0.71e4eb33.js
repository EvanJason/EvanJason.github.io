"use strict";(self.webpackChunklwl_docusaurus_website=self.webpackChunklwl_docusaurus_website||[]).push([[2944],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),h=o,v=u["".concat(s,".").concat(h)]||u[h]||d[h]||r;return t?a.createElement(v,l(l({ref:n},p),{},{components:t})):a.createElement(v,l({ref:n},p))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=h;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5517:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const r={title:"\u7b5b\u9009\u7ec4\u4ef6",categories:["React","antd","\u7b5b\u9009\u7ec4\u4ef6"],tags:["React","antd","\u7b5b\u9009\u7ec4\u4ef6"],date:"2022-08-10",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"\u7b5b\u9009\u7ec4\u4ef6"},l="\u7b5b\u9009\u7ec4\u4ef6",i={unversionedId:"React/\u7b5b\u9009\u7ec4\u4ef6",id:"React/\u7b5b\u9009\u7ec4\u4ef6",title:"\u7b5b\u9009\u7ec4\u4ef6",description:"less\u6587\u4ef6  antd\u7ec4\u4ef6",source:"@site/docs/React/\u7b5b\u9009\u7ec4\u4ef6.md",sourceDirName:"React",slug:"/React/\u7b5b\u9009\u7ec4\u4ef6",permalink:"/docs/React/\u7b5b\u9009\u7ec4\u4ef6",draft:!1,editUrl:"https://github.com/evanjason/evanjason.github.io/tree/main/docs/React/\u7b5b\u9009\u7ec4\u4ef6.md",tags:[{label:"React",permalink:"/docs/tags/react"},{label:"antd",permalink:"/docs/tags/antd"},{label:"\u7b5b\u9009\u7ec4\u4ef6",permalink:"/docs/tags/\u7b5b\u9009\u7ec4\u4ef6"}],version:"current",frontMatter:{title:"\u7b5b\u9009\u7ec4\u4ef6",categories:["React","antd","\u7b5b\u9009\u7ec4\u4ef6"],tags:["React","antd","\u7b5b\u9009\u7ec4\u4ef6"],date:"2022-08-10",author:"\u6df1\u6d77\u5982\u68a6",excerpt:"\u7b5b\u9009\u7ec4\u4ef6"},sidebar:"tutorialSidebar",previous:{title:"\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355",permalink:"/docs/React/\u5c01\u88c5Antd\u57fa\u7840\u8868\u5355"},next:{title:"\u7ec4\u4ef6\u5316Context Provider",permalink:"/docs/React/\u7ec4\u4ef6\u5316Context Provider"}},s={},c=[{value:"less\u6587\u4ef6  antd\u7ec4\u4ef6",id:"less\u6587\u4ef6--antd\u7ec4\u4ef6",level:2},{value:"\u4e3b\u4ee3\u7801",id:"\u4e3b\u4ee3\u7801",level:2},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u7b5b\u9009\u7ec4\u4ef6"},"\u7b5b\u9009\u7ec4\u4ef6"),(0,o.kt)("h2",{id:"less\u6587\u4ef6--antd\u7ec4\u4ef6"},"less\u6587\u4ef6  antd\u7ec4\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-less"},"\n\n.m-arrow-close {\n    .ant-popover-arrow {\n        display: none;\n    }\n}\n\n.m-checbox-group-title {\n    font-size: 12px;\n    border-right: 1px solid #D9D9D9;\n    padding: 0px 5px;\n    cursor: pointer;\n}\n\n.m-checbox-group-title:hover {\n    color: rgb(91, 183, 225);\n    transition: all 1s;\n}\n\n.m-checkbox-dropdown-content {\n    .ant-popover-inner-content {\n        padding: 12px;\n        max-height: 300px;\n        overflow: hidden;\n    }\n}\n\n.filter-checbox-group-content {\n    max-height: 205px;\n    min-height: 100px;\n    overflow: auto;\n}\n\n.m-checbox-group-content-footer {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border-top: 1px solid #f0f0f0;\n    padding-top: 5px;\n}\n")),(0,o.kt)("h2",{id:"\u4e3b\u4ee3\u7801"},"\u4e3b\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\nimport { Popover, Button, Checkbox, Space, Input, Divider } from 'antd';\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport 'g-userGroup/src/component/IUserBehaviorSequence/EventFilter/index.less';\nimport _ from 'lodash';\n\ninterface IFilterProps {\n    title?: string,\n    onChange?: (value: any[]) => void,\n    value?: any[],\n    options: {\n        label: string,\n        value: string\n    }[],\n    position?: 'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop',\n    /** \u53ef\u4ee5\u5168\u9009*/\n    canSelectAll?: boolean,\n    loading?: boolean,\n    triggerNode?: React.ReactNode,\n    size?: 'small' | 'middle' | 'large'\n    style?: any, // \u4e0b\u62c9\u6837\u5f0f\n}\n\nexport default class EventFilter extends React.Component<IFilterProps, {}> {\n\n    state = {\n        visible: false,\n        value: [],\n        searchKeywords: '',\n    }\n\n    // \u4e0a\u6b21\u9009\u4e2d\u7684\u503c\n    lastValue: any[] = []\n\n    componentDidMount() {\n        const { value } = this.props;\n        if (value) {\n            this.setState({ value })\n            this.lastValue = value\n        }\n    }\n\n    componentDidUpdate(preProps) {\n        const lastValue = preProps?.value\n        const curValue = this.props?.value\n        if (lastValue && curValue && !(_.isEqual(lastValue, curValue))) {\n            this.setState({ value: curValue })\n            this.lastValue = curValue\n        }\n    }\n\n    handleVisibleChange = (visible: boolean) => {\n        this.setState({ visible, searchKeywords: '', value: this.props.value })\n    }\n\n    handleChange = (checkedList: any[]) => {\n        let { options } = this.props;\n        let value = this.lastValue;\n        const { searchKeywords } = this.state;\n        let realOptions = options.filter(it => it.label.includes(searchKeywords));\n        // \u5bf9\u5e94\u5217\u8868value\u96c6\n        let realOptionsValues = realOptions.map((it) => it.value);\n        realOptionsValues.forEach((item) => {\n            // \u5217\u8868\u7684\u5728\u65e7\u7684\u9009\u4e2d\u5217\u8868\u5b58\u5728\uff0c\u5728\u65b0\u7684\u9009\u4e2d\u5217\u8868\u4e0d\u5b58\u5728\u5219\u65e7\u9009\u4e2d\u5217\u8868\u8fc7\u6ee4\u6389\u8fd9\u4e2a\u503c\n            if (\n                value.includes(item) &&\n                !checkedList.includes(item)\n            ) {\n                value = value.filter(\n                    (it) => it !== item\n                );\n            }\n        });\n        // \u65b0\u5217\u8868\u589e\u52a0\u7684\u503c\n        let changeValues = checkedList.filter((it) => {\n            return !value.includes(it);\n        });\n        // \u5408\u5e76\u4e4b\u540e\u6700\u7ec8\u503c\n        let newCheckedList = [...value, ...changeValues];\n        this.lastValue = newCheckedList\n        this.setState({ value: newCheckedList })\n    }\n\n    onCheckAllChange = (e, hasSearch?: boolean) => {\n        const { options } = this.props\n        const { searchKeywords } = this.state\n        if (e.target.checked) {\n            if (hasSearch) {\n                this.handleChange(options.filter(it => it.label?.includes(searchKeywords)).map(({ value }) => value) || []);\n            } else {\n                this.handleChange(options.map(({ value }) => value));\n            }\n        } else {\n            this.handleChange([]);\n        }\n    };\n\n    handleOk = () => {\n        const { onChange } = this.props\n        onChange && onChange(this.state.value)\n        this.setState({ visible: false })\n    }\n\n    handleFilterReset = () => {\n        const { value } = this.state\n        if (value.length) {\n            this.setState({ value: [] })\n            this.lastValue = []\n        }\n    }\n\n    getContent = () => {\n        const { options, canSelectAll } = this.props;\n        const { value } = this.state;\n        const { searchKeywords } = this.state;\n        let renderOptions = options.filter(it => it.label?.includes(searchKeywords)) || [];\n        return <div className='d-flex flex-column' onClick={(e) => e.stopPropagation()}>\n            <Input\n                onChange={(e)=>{\n                    this.setState({ searchKeywords: e.target.value })\n                }}\n                value={searchKeywords}\n                style={{ width: '100%', marginBottom: 15 }}\n                prefix={<SearchOutlined />}\n                placeholder=\"\u8bf7\u8f93\u5165\"\n            />\n            <div className='filter-checbox-group-content'>\n                {canSelectAll && (\n                    <>\n                        <Checkbox\n                            indeterminate={value.length && value.length < options.length}\n                            onChange={(value) => this.onCheckAllChange(value, Boolean(searchKeywords))}\n                            checked={value.length && value.length === options.length}\n                        >\n                            \u5168\u9009\n                        </Checkbox>\n                        <Divider className='my-2' />\n                    </>\n                )}\n                <Checkbox.Group onChange={this.handleChange} value={value}>\n                    <Space direction=\"vertical\">\n                        {\n                            renderOptions.map((item) => {\n                                return (\n                                    <Checkbox\n                                        key={item.value}\n                                        value={item.value}\n                                    >\n                                        <div style={{ whiteSpace: 'nowrap' }} title={item.label}>{item.label}</div>\n                                    </Checkbox>\n                                );\n                            })\n                        }\n                    </Space>\n                </Checkbox.Group>\n            </div>\n            <div className='m-checbox-group-content-footer'>\n                <div\n                    style={{\n                        color: value.length ? '#5BB7E1' : \"#C9C9C9\",\n                        cursor: value.length ? 'pointer' : 'not-allowed',\n                        userSelect: 'none'\n                    }}\n                    onClick={this.handleFilterReset}\n                >\n                    \u91cd\u7f6e\n                </div>\n                <Button type='primary' size='small' onClick={this.handleOk}>\u786e\u5b9a</Button>\n            </div>\n        </div>\n    }\n\n    render() {\n        const { position, title, loading, triggerNode, style, size } = this.props;\n        const { visible } = this.state;\n        const content = this.getContent()\n        return <div>\n            <Popover\n                overlayClassName='m-checkbox-dropdown-content m-arrow-close'\n                content={content}\n                trigger=\"click\"\n                visible={visible}\n                placement={position || 'bottomRight'}\n                onVisibleChange={this.handleVisibleChange}\n                // getPopupContainer={triggerNode => triggerNode.parentElement}\n                overlayStyle={{ ...style, zIndex: 1 }}\n            >\n                {\n                    !triggerNode ? <Button size={size ? size : 'small'} loading={loading}>{title}</Button> :\n                        <div style={{ userSelect: 'none' }} onClick={(e) => e.stopPropagation()}>{triggerNode}</div>\n                }\n            </Popover>\n        </div>\n    }\n}\n")),(0,o.kt)("h2",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"\n<EventFilter\n    options={eventList}\n    value={selectEventList}\n    onChange={(value) => this.eventListChange(value)}\n    canSelectAll\n    triggerNode={\n        <div\n        style={{\n        display: 'flex',\n        alignItems: 'center',\n        width: 150,\n        marginRight: 10\n    }}\n    >\n            <Button type='default'>\u4e8b\u4ef6 {`${selectEventList.length}/${eventList.length}`}</Button>\n    </div>\n    }\n/>\n")))}d.isMDXComponent=!0}}]);